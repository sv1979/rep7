{"version":3,"sources":["components/Headblock.js","components/TodoItem.js","components/List.js","components/Activelist.js","components/Editor.js","components/StatsBlock.js","App.js","serviceWorker.js","index.js"],"names":["styles","color","fontStyle","Headblock","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","style","date","getHours","Component","TodoItem","_this","state","status","remove_todo_by_id","bind","assertThisInitialized","edit_todo_by_id","checkChange","setState","onetodo","removeTodoById","id","event","console","log","target","checked","changeStatus","className","type","name","onekey","onChange","text","onClick","List","removeTodo","_this2","list_todos","todos","length","$this","map","todo","idx","components_TodoItem","key","getList","Activelist","components_List","Editor","pre_text","pre_text_set","handleChange","handleSubmit","nextProps","value","preventDefault","submitted_text","refs","todo_text","add_todo","onSubmit","ref","StatsBlock","filter","el","getTotalTodosCount","getDoneTodosCount","App","Date","editing_todo_id","text_to_edit","saveTodoItem","new_todo","current_todos","editing_index","findIndex","obj","getNewId","concat","toConsumableArray","todo_to_edit","Math","random","toString","substr","components_Headblock","components_Editor","components_Activelist","components_StatsBlock","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.61a22376.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst styles = { color: \"#998900\", fontStyle: 'italic' };\r\n\r\nclass Headblock extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <h4 style={styles} > It is currently about {this.props.date.getHours() % 12} o'clock!</h4>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Headblock;","import React, { Component } from 'react';\r\n\r\nclass TodoItem extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            status: false,\r\n        };\r\n        this.remove_todo_by_id = this.remove_todo_by_id.bind(this);\r\n        this.edit_todo_by_id = this.edit_todo_by_id.bind(this);\r\n        this.checkChange = this.checkChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            status: this.props.onetodo.status\r\n        })\r\n    }\r\n\r\n    remove_todo_by_id() {\r\n        this.props.removeTodoById(this.props.onetodo.id);\r\n    }\r\n\r\n    edit_todo_by_id() {\r\n        this.props.edit_todo_by_id(this.props.onetodo.id);\r\n    }\r\n\r\n    checkChange(event) {\r\n        console.log(event.target.checked);\r\n        this.setState({\r\n            status: event.target.checked\r\n        });\r\n        this.props.changeStatus(this.props.onetodo.id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"todo__item\">\r\n                <label className={this.state.status ? 'class_checked' : 'class_unchecked'}>\r\n                    <input type=\"checkbox\"\r\n                        name={this.props.onekey}\r\n                        onChange={this.checkChange}\r\n                        checked={this.props.onetodo.status} />\r\n                    <span>{this.props.onetodo.text}</span>\r\n                </label>\r\n                <button onClick={this.edit_todo_by_id} >Edit</button>\r\n                <button onClick={this.remove_todo_by_id} >Remove</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from 'react';\r\nimport TodoItem from './TodoItem';\r\n\r\nclass List extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.removeTodo = this.removeTodo.bind(this);\r\n        this.edit_todo_by_id = this.edit_todo_by_id.bind(this);\r\n        this.changeStatus = this.changeStatus.bind(this);\r\n    }\r\n\r\n    removeTodo(id) {\r\n        console.log('id to remove:', id);\r\n        this.props.removeTodoById(id);\r\n    }\r\n\r\n    edit_todo_by_id(id) {\r\n        console.log('id to edit:', id);\r\n        this.props.edit_todo_by_id(id);\r\n    }\r\n    \r\n    changeStatus(id) {\r\n        console.log('id to change:', id);\r\n        this.props.changeStatus(id);\r\n    }\r\n\r\n    getList() {\r\n        let list_todos = null;\r\n\r\n        if (this.props.todos.length) {\r\n            let $this = this;\r\n            list_todos = this.props.todos.map((todo, idx) => {\r\n                return (\r\n                    <TodoItem onetodo={todo}\r\n                        key={idx} onekey={idx}\r\n                        changeStatus={$this.changeStatus}\r\n                        edit_todo_by_id={this.edit_todo_by_id}\r\n                        removeTodoById={$this.removeTodo} />\r\n                )\r\n            });\r\n        }\r\n\r\n        return list_todos;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"list\">\r\n                {this.getList()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default List;","import React, { Component } from 'react';\r\nimport Headblock from './Headblock';\r\nimport TodoItem from './TodoItem';\r\nimport List from './List';\r\n\r\nconst styles = { color: \"#998900\", fontStyle: 'italic' };\r\n\r\nclass Activelist extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.removeTodo = this.removeTodo.bind(this);\r\n        this.edit_todo_by_id = this.edit_todo_by_id.bind(this);\r\n        this.changeStatus = this.changeStatus.bind(this);\r\n    }\r\n\r\n    removeTodo(id) {\r\n        console.log('id to remove:', id);\r\n        this.props.removeTodoById(id);\r\n    }\r\n\r\n    edit_todo_by_id(id) {\r\n        console.log('id to edit:', id);\r\n        this.props.edit_todo_by_id(id);\r\n    }\r\n\r\n    changeStatus(id) {\r\n        console.log('id to change:', id);\r\n        this.props.changeStatus(id);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"activelist\">\r\n                <List todos={this.props.todos}\r\n                    changeStatus={this.changeStatus}\r\n                    edit_todo_by_id={this.edit_todo_by_id}\r\n                    removeTodoById={this.removeTodo} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Activelist;\r\n","import React, { Component } from 'react';\r\n\r\nclass Editor extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: this.props.pre_text ? this.props.pre_text : '',\r\n            pre_text_set: this.props.pre_text !== ''\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.pre_text) {\r\n            this.setState({\r\n                text: nextProps.pre_text\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({ text: event.target.value });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const submitted_text = this.refs.todo_text.value;\r\n        //alert('A text was submitted: ' + submitted_text);\r\n\r\n        this.props.add_todo({ text: submitted_text });\r\n        this.setState({ text: '' });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"editor\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input type=\"text\" name=\"text\" ref=\"todo_text\" value={this.state.text} onChange={this.handleChange} />\r\n                    <input type=\"submit\" onClick={this.handleSubmit} />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Editor;","import React, { Component } from 'react';\r\n\r\nclass StatsBlock extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    getTotalTodosCount(){\r\n        return this.props.todos.length;\r\n    }\r\n\r\n    getDoneTodosCount(){\r\n\r\n        let doneTodos = this.props.todos.filter((el)=>{\r\n            return el.status===true\r\n        });\r\n        return doneTodos.length;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"stats\">\r\n                <p>Total: {this.getTotalTodosCount()}</p>\r\n                <p>Done: {this.getDoneTodosCount()}</p>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default StatsBlock;","import React, { Component } from 'react';\nimport './App.scss';\nimport Headblock from './components/Headblock';\nimport Activelist from './components/Activelist';\nimport Editor from './components/Editor';\nimport StatsBlock from './components/StatsBlock';\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n      todos: [],\n      editing_todo_id: null,\n      text_to_edit: ''\n    };\n    this.saveTodoItem = this.saveTodoItem.bind(this);\n    this.removeTodo = this.removeTodo.bind(this);\n    this.changeStatus = this.changeStatus.bind(this);\n    this.edit_todo_by_id = this.edit_todo_by_id.bind(this);\n  }\n\n  saveTodoItem(new_todo) {\n\n    let current_todos = this.state.todos.length ? this.state.todos : [];\n\n    if(this.state.editing_todo_id){\n      let editing_index = current_todos.findIndex(obj => obj.id === this.state.editing_todo_id);\n      current_todos[editing_index].text = new_todo.text;\n      this.setState({\n        editing_todo_id: null,\n        text_to_edit: '',\n        todos: current_todos\n      });\n    } else {\n      new_todo.id = this.getNewId();\n      new_todo.status = false;\n      this.setState({\n        todos: [new_todo, ...current_todos]\n      });\n    }\n  }\n\n  removeTodo(id) {\n    let current_todos = this.state.todos;\n    current_todos = this.state.todos.filter((el)=>{\n      return (el.id != id)\n    });\n    this.setState({\n      todos: current_todos\n    });\n  }\n\n  edit_todo_by_id(id){\n    this.setState({\n      editing_todo_id: id\n    });\n\n    let todo_to_edit = this.state.todos.length ? this.state.todos.filter((el)=>{\n      if(el.id === id){\n        return el;\n      }     \n    })[0] : null;\n\n    this.setState({\n      text_to_edit: todo_to_edit ? todo_to_edit.text : ''\n    });\n\n  }\n\n  changeStatus(id) {\n    let current_todos = this.state.todos;\n    current_todos = this.state.todos.filter((el)=>{\n      if(el.id === id){\n        el.status = !el.status;\n      }\n      return el;\n    });\n    this.setState({\n      todos: current_todos\n    });\n  }\n\n  getNewId() {\n    return '_' + Math.random().toString(36).substr(2, 9);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Headblock date={this.state.date} />\n        <Editor add_todo={this.saveTodoItem} pre_text={this.state.text_to_edit} />\n        <Activelist\n          todos={this.state.todos}\n          date={this.state.date}\n          changeStatus={this.changeStatus}\n          edit_todo_by_id={this.edit_todo_by_id}\n          removeTodoById={this.removeTodo} />\n        <StatsBlock todos={this.state.todos} />  \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}